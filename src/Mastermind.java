/*
 * Rohan Rajesh
 * June 13, 2022
 * Mastermind game!
 */

/**
 *
 * @author roraj5945
 */
public class Mastermind extends javax.swing.JFrame {

    private String Colors = "";
    private int guesses = 0;
    private int mode = 0;
    private int inputOne;
    private int inputTwo;
    private int inputThree;
    private int inputFour;    
    private int inputFive;
    private int inputSix;
    private int colorOne;
    private int colorTwo;
    private int colorThree;
    private int colorFour;
    private int colorFive;
    private int colorSix;
    private int attempts = 0;
    private int totalguesses;
    private boolean amount = false;
    private String correct = "";
    /**
     * Creates new form Mastermind
     */
    public Mastermind() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        lblTitle = new javax.swing.JLabel();
        btnEnter = new javax.swing.JButton();
        btnLeave = new javax.swing.JButton();
        btnRed = new javax.swing.JButton();
        btnBlue = new javax.swing.JButton();
        btnYellow = new javax.swing.JButton();
        btnGreen = new javax.swing.JButton();
        btnPink = new javax.swing.JButton();
        btnOrange = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtInput = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtOutput = new javax.swing.JTextArea();
        btnEasy = new javax.swing.JButton();
        btnMedium = new javax.swing.JButton();
        btnHard = new javax.swing.JButton();
        btnExtreme = new javax.swing.JButton();
        btnMagenta = new javax.swing.JButton();
        btnBrown = new javax.swing.JButton();
        btnGrey = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtAreaErrors = new javax.swing.JTextArea();
        lblInput = new javax.swing.JLabel();
        lblOutput = new javax.swing.JLabel();
        lblErrors = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblTitle.setFont(new java.awt.Font("Eras Medium ITC", 0, 24)); // NOI18N
        lblTitle.setText("Mastermind!");

        btnEnter.setText("ENTER");
        btnEnter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnterActionPerformed(evt);
            }
        });

        btnLeave.setText("Leave");
        btnLeave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLeaveActionPerformed(evt);
            }
        });

        btnRed.setText("XXX");
        btnRed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRedActionPerformed(evt);
            }
        });

        btnBlue.setForeground(new java.awt.Color(255, 255, 255));
        btnBlue.setText("XXX");
        btnBlue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBlueActionPerformed(evt);
            }
        });

        btnYellow.setText("XXX");
        btnYellow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnYellowActionPerformed(evt);
            }
        });

        btnGreen.setText("XXX");
        btnGreen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGreenActionPerformed(evt);
            }
        });

        btnPink.setText("XXX");
        btnPink.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPinkActionPerformed(evt);
            }
        });

        btnOrange.setText("XXX");
        btnOrange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrangeActionPerformed(evt);
            }
        });

        txtInput.setColumns(20);
        txtInput.setRows(5);
        jScrollPane1.setViewportView(txtInput);

        txtOutput.setColumns(20);
        txtOutput.setRows(5);
        jScrollPane2.setViewportView(txtOutput);

        btnEasy.setText("Easy");
        btnEasy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEasyActionPerformed(evt);
            }
        });

        btnMedium.setText("Medium");
        btnMedium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMediumActionPerformed(evt);
            }
        });

        btnHard.setText("Hard");
        btnHard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHardActionPerformed(evt);
            }
        });

        btnExtreme.setText("Extreme");
        btnExtreme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExtremeActionPerformed(evt);
            }
        });

        btnMagenta.setText("XXX");
        btnMagenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMagentaActionPerformed(evt);
            }
        });

        btnBrown.setText("XXX");
        btnBrown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrownActionPerformed(evt);
            }
        });

        btnGrey.setText("XXX");
        btnGrey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGreyActionPerformed(evt);
            }
        });

        txtAreaErrors.setColumns(20);
        txtAreaErrors.setRows(5);
        jScrollPane3.setViewportView(txtAreaErrors);

        lblInput.setText("Input");

        lblOutput.setText("Output");

        lblErrors.setText("Errors:");

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(btnEasy)
                .addGap(203, 203, 203)
                .addComponent(lblInput)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblOutput)
                .addGap(129, 129, 129))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblTitle)
                .addGap(246, 246, 246)
                .addComponent(btnLeave))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnMedium)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnRed))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnHard)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnBlue, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnYellow, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnExtreme)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnGreen))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnPink)
                                    .addComponent(btnOrange)
                                    .addComponent(btnMagenta)
                                    .addComponent(btnBrown)
                                    .addComponent(btnGrey))))
                        .addGap(47, 47, 47)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(btnEnter)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblErrors)
                        .addGap(18, 18, 18)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 328, Short.MAX_VALUE))
                    .addComponent(jScrollPane3)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblTitle))
                    .addComponent(btnLeave))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblInput)
                            .addComponent(lblOutput))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 346, Short.MAX_VALUE)
                            .addComponent(jScrollPane2))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                            .addGroup(layout.createSequentialGroup()
                                .addGap(49, 49, 49)
                                .addComponent(lblErrors)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(btnEasy)
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnRed)
                            .addComponent(btnMedium))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnBlue)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnYellow))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(btnHard)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnGreen)
                            .addComponent(btnExtreme))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPink)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnOrange)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnMagenta)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBrown)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnGrey)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                        .addComponent(btnEnter)
                        .addGap(31, 31, 31))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEnterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnterActionPerformed
   //this code checks to see what mode it is, along with how many colors the user has input, if it does not run, the user will be prompted to enter the maximum amount of colors corresponding to their difficult.
    if (mode == 1 || mode == 2 || mode == 3) {
        if (guesses == 4){
            amount = true;
        }
    } else if (mode == 4 && guesses == 6) {
        amount = true;
    }
    
    if (amount == true) {    
    if (mode == 1 || mode == 2 || mode == 3){
    //this code checks to see if the color is in right spot or wrong spot, if right, black will appear, if wrong spot, white will appear
    if (inputOne == colorOne ) {
        correct = correct + "Black, ";
        txtOutput.setText(correct);
    }
    if (inputOne == colorTwo){
       correct = correct + "White, ";
       txtOutput.setText(correct); 
    }
    if (inputOne == colorThree){
        correct = correct + "White, ";
        txtOutput.setText(correct);
    }
    if (inputOne == colorFour){
        correct = correct + "White, ";
        txtOutput.setText(correct);
    }
    if (inputTwo == colorTwo ) {
        correct = correct + "Black, ";
        txtOutput.setText(correct);
    }
    if (inputTwo == colorThree){
        correct = correct + "White, ";
        txtOutput.setText(correct);
    }
    if (inputTwo == colorFour){
        correct = correct + "White, ";
        txtOutput.setText(correct);
    }
    if (inputThree == colorThree) {
        correct = correct + "Black, ";
        txtOutput.setText(correct);
    }
    if (inputThree == colorFour){
        correct = correct + "White, ";
        txtOutput.setText(correct);
    }
    if (inputFour == colorFour) {
        correct = correct + "Black, ";
        txtOutput.setText(correct);
    }
    } else if (mode == 4) {
      if (inputOne == colorOne ) {
        correct = correct + "Black, ";
        txtOutput.setText(correct);
    }
    if (inputOne == colorTwo){
       correct = correct + "White, ";
       txtOutput.setText(correct); 
    }
    if (inputOne == colorThree){
        correct = correct + "White, ";
        txtOutput.setText(correct);
    }
    if (inputOne == colorFour){
        correct = correct + "White, ";
        txtOutput.setText(correct);
    }
    if (inputOne == colorFive ) {
        correct = correct + "Black, ";
        txtOutput.setText(correct);
    }
    if (inputOne == colorSix){
       correct = correct + "White, ";
       txtOutput.setText(correct); 
    }
    if (inputTwo == colorTwo){
        correct = correct + "White, ";
        txtOutput.setText(correct);
    }
    if (inputTwo == colorThree) {
        correct = correct + "Black, ";
        txtOutput.setText(correct);
    }
    if (inputTwo == colorFour){
       correct = correct + "White, ";
       txtOutput.setText(correct); 
    }
    if (inputTwo == colorFive){
        correct = correct + "White, ";
        txtOutput.setText(correct);
    }
    if (inputTwo == colorSix){
        correct = correct + "White, ";
        txtOutput.setText(correct);
    }
    if (inputThree == colorThree) {
        correct = correct + "Black, ";
        txtOutput.setText(correct);
    }
    if (inputThree == colorFour){
        correct = correct + "White, ";
        txtOutput.setText(correct);
    }
    if (inputThree == colorFive){
        correct = correct + "White, ";
        txtOutput.setText(correct);
    }
    if (inputThree == colorSix){
        correct = correct + "White, ";
        txtOutput.setText(correct);
    }
    if (inputFour == colorFour) {
        correct = correct + "Black, ";
        txtOutput.setText(correct);
    }
    if (inputFour == colorFive){
        correct = correct + "White, ";
        txtOutput.setText(correct);
    }
    if (inputFour == colorSix){
        correct = correct + "White, ";
        txtOutput.setText(correct);
    }
    if (inputFive == colorFive) {
        correct = correct + "Black, ";
        txtOutput.setText(correct);
    }
    if (inputFive == colorSix){
        correct = correct + "White, ";
        txtOutput.setText(correct);
    }
    if (inputSix == colorSix) {
        correct = correct + "Black, ";
        txtOutput.setText(correct);
    }
    }
    correct = correct + "\n";
    Colors = Colors + "\n";
    guesses = 0;
    attempts = attempts + 1;
    if ((mode == 1 || mode == 2 || mode == 3) && (inputOne == colorOne && inputTwo == colorTwo && inputThree == colorThree && inputFour == colorFour)){
        txtOutput.setText("YOU WIN! YOU CAN LEAVE NOW! CLICK LEAVE");
    }
    if ((mode == 4) && (inputOne == colorOne && inputTwo == colorTwo && inputThree == colorThree && inputFour == colorFour && inputFive == colorFive && inputSix == colorSix)){
        txtOutput.setText("YOU WIN! YOU CAN LEAVE NOW! CLICK LEAVE");
    }
    if (attempts == totalguesses) {
        if (mode == 1 || mode == 2 || mode == 3) {
        txtOutput.setText("YOU LOSE! The code was (in order of numbers down the line of colors on your side) " + inputOne + " "  + inputTwo + " "  + inputThree + " " + inputFour + "YOU CAN LEAVE NOW! CLICK LEAVE");    
        } else if (mode == 4) {
           txtOutput.setText("YOU LOSE! The code was (in order of numbers down the line of colors on your side) " + inputOne + " "  + inputTwo + " "  + inputThree + " " + inputFour + " " + inputFive + " " + inputSix + "YOU CAN LEAVE NOW! CLICK LEAVE"); 
        }
        
    }
    txtAreaErrors.setText("");
    } else txtAreaErrors.setText("Please enter all your colors (4 for easy, medium and hard, 6 for extreme)");
    amount = false;
    }//GEN-LAST:event_btnEnterActionPerformed

    private void btnRedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRedActionPerformed
    //this sets the text box to display the color in text when the button is pressed, and gives the integer corresponding to the color
    if (mode != 0){
    if (guesses == 0) {
    Colors = Colors + "Red, ";
    inputOne = 1;
    guesses = guesses + 1;
    txtInput.setText(Colors);
    } else if (guesses == 1) {
    Colors = Colors + "Red, ";
    inputTwo = 1;
    guesses = guesses + 1;
    txtInput.setText(Colors);
    } else if (guesses == 2) {
    Colors = Colors + "Red, ";
    inputThree = 1;
    guesses = guesses + 1;
    txtInput.setText(Colors);
    } else if (guesses == 3) {
    Colors = Colors + "Red, ";
    inputFour = 1;
    guesses = guesses + 1;
    txtInput.setText(Colors);
    } else if (mode == 4) {
        if (guesses == 4) {
          Colors = Colors + "Red, ";
          inputFive = 1;
          guesses = guesses + 1;
          txtInput.setText(Colors);  
        } else if (guesses == 5) {
          Colors = Colors + "Red, ";
          inputSix = 1;
          guesses = guesses + 1;
          txtInput.setText(Colors);  
        }
    }
    }
    }//GEN-LAST:event_btnRedActionPerformed

    private void btnLeaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLeaveActionPerformed
    //this basically shut down the program when clicked
    this.dispose();
    }//GEN-LAST:event_btnLeaveActionPerformed

    private void btnEasyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEasyActionPerformed
      totalguesses = 6;
      String code;
      //randomly selects 4 integers, each of which are a color
      colorOne = ((int)(Math.random() * 6) + 1); 
      colorTwo = ((int)(Math.random() * 6) + 1);
      colorThree = ((int)(Math.random() * 6) + 1);
      colorFour = ((int)(Math.random() * 6) + 1);
      //sets text and color of all buttons in the mode
      btnRed.setText("Red");
      btnRed.setBackground(new java.awt.Color(255, 0, 51));
      btnBlue.setText("Blue");
      btnBlue.setBackground(new java.awt.Color(51, 51, 255));
      btnYellow.setText("Yellow");
      btnYellow.setBackground(new java.awt.Color(255, 255, 51));
      btnGreen.setText("Green");
      btnGreen.setBackground(new java.awt.Color(0, 153, 0));
      btnPink.setText("Pink");
      btnPink.setBackground(new java.awt.Color(255, 102, 255));
      btnOrange.setText("Orange");
      btnOrange.setBackground(new java.awt.Color(255, 153, 0));
      btnMagenta.setText("XXX");
      btnBrown.setText("XXX");
      btnGrey.setText("XXX");
      //sets mode integer to the correct mode
      mode = 1;
    }//GEN-LAST:event_btnEasyActionPerformed

    private void btnMediumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMediumActionPerformed
      totalguesses = 6;
      String code;
      //randomly selects 4 integers, each of which are a color
      colorOne = ((int)(Math.random() *8) + 1); 
      colorTwo = ((int)(Math.random() * 8) + 1);
      colorThree = ((int)(Math.random() * 8) + 1);
      colorFour = ((int)(Math.random() * 8) + 1);
      //sets text and color of all buttons in the mode
      btnRed.setText("Red");
      btnRed.setBackground(new java.awt.Color(255, 0, 51));
      btnBlue.setText("Blue");
      btnBlue.setBackground(new java.awt.Color(51, 51, 255));
      btnYellow.setText("Yellow");
      btnYellow.setBackground(new java.awt.Color(255, 255, 51));
      btnGreen.setText("Green");
      btnGreen.setBackground(new java.awt.Color(0, 153, 0));
      btnPink.setText("Pink");
      btnPink.setBackground(new java.awt.Color(255, 102, 255));
      btnOrange.setText("Orange");
      btnOrange.setBackground(new java.awt.Color(255, 153, 0));
      btnMagenta.setText("Magenta");
      btnMagenta.setBackground(new java.awt.Color(204, 0, 204));
      btnBrown.setText("Brown");
      btnBrown.setBackground(new java.awt.Color(137, 84, 4));
      btnGrey.setText("XXX");
      //sets mode integer to the correct mode
      mode = 2;
    }//GEN-LAST:event_btnMediumActionPerformed

    private void btnHardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHardActionPerformed
      totalguesses = 6;
      String code;
      //Randomly generates a color using integers
      colorOne = ((int)(Math.random() * 9) + 1); 
      colorTwo = ((int)(Math.random() * 9) + 1);
      colorThree = ((int)(Math.random() * 9) + 1);
      colorFour = ((int)(Math.random() * 9) + 1);
      //sets text and color of all buttons in the mode
      btnRed.setText("Red");
      btnRed.setBackground(new java.awt.Color(255, 0, 51));
      btnBlue.setText("Blue");
      btnBlue.setBackground(new java.awt.Color(51, 51, 255));
      btnYellow.setText("Yellow");
      btnYellow.setBackground(new java.awt.Color(255, 255, 51));
      btnGreen.setText("Green");
      btnGreen.setBackground(new java.awt.Color(0, 153, 0));
      btnPink.setText("Pink");
      btnPink.setBackground(new java.awt.Color(255, 102, 255));
      btnOrange.setText("Orange");
      btnOrange.setBackground(new java.awt.Color(255, 153, 0));
      btnMagenta.setText("Magenta");
      btnMagenta.setBackground(new java.awt.Color(204, 0, 204));
      btnBrown.setText("Brown");
      btnBrown.setBackground(new java.awt.Color(137, 84, 4));
      btnGrey.setText("Grey");
      //sets mode integer to the correct mode
      mode = 3;
    }//GEN-LAST:event_btnHardActionPerformed

    private void btnExtremeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExtremeActionPerformed
     //Total guesses are halved to make extreme mode different from hard mode
     totalguesses = 3;
      String code;
      //randomly selects 4 integers, each of which are a color
      colorOne = ((int)(Math.random() * 9) + 1); 
      colorTwo = ((int)(Math.random() * 9) + 1);
      colorThree = ((int)(Math.random() * 9) + 1);
      colorFour = ((int)(Math.random() * 9) + 1);
      colorFive = ((int)(Math.random() * 9) + 1); 
      colorSix = ((int)(Math.random() * 9) + 1);
      //sets text and color of all buttons in the mode
      btnRed.setText("Red");
      btnRed.setBackground(new java.awt.Color(255, 0, 51));
      btnBlue.setText("Blue");
      btnBlue.setBackground(new java.awt.Color(51, 51, 255));
      btnYellow.setText("Yellow");
      btnYellow.setBackground(new java.awt.Color(255, 255, 51));
      btnGreen.setText("Green");
      btnGreen.setBackground(new java.awt.Color(0, 153, 0));
      btnPink.setText("Pink");
      btnPink.setBackground(new java.awt.Color(255, 102, 255));
      btnOrange.setText("Orange");
      btnOrange.setBackground(new java.awt.Color(255, 153, 0));
      btnMagenta.setText("Magenta");
      btnMagenta.setBackground(new java.awt.Color(204, 0, 204));
      btnBrown.setText("Brown");
      btnBrown.setBackground(new java.awt.Color(137, 84, 4));
      btnGrey.setText("Grey");
      //sets mode integer to the correct mode
      mode = 4;
    }//GEN-LAST:event_btnExtremeActionPerformed

    private void btnBlueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBlueActionPerformed
    if (mode != 0){
    if (guesses == 0) {
    Colors = Colors + "Blue, ";
    inputOne = 2;
    guesses = guesses + 1;
    txtInput.setText(Colors);
    } else if (guesses == 1) {
    Colors = Colors + "Blue, ";
    inputTwo = 2;
    guesses = guesses + 1;
    txtInput.setText(Colors);
    } else if (guesses == 2) {
    Colors = Colors + "Blue, ";
    inputThree = 2;
    guesses = guesses + 1;
    txtInput.setText(Colors);
    } else if (guesses == 3) {
    Colors = Colors + "Blue, ";
    inputFour = 2;
    guesses = guesses + 1;
    txtInput.setText(Colors);
    } else if (mode == 4) {
        if (guesses == 4) {
          Colors = Colors + "Blue, ";
          inputFive = 2;
          guesses = guesses + 1;
          txtInput.setText(Colors);  
        } else if (guesses == 5) {
          Colors = Colors + "Blue, ";
          inputSix = 2;
          guesses = guesses + 1;
          txtInput.setText(Colors);  
        }
    }
    }
    }//GEN-LAST:event_btnBlueActionPerformed

    private void btnYellowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnYellowActionPerformed
    if (mode != 0){
    if (guesses == 0) {
    Colors = Colors + "Yellow, ";
    inputOne = 3;
    guesses = guesses + 1;
    txtInput.setText(Colors);
    } else if (guesses == 1) {
    Colors = Colors + "Yellow, ";
    inputTwo = 3;
    guesses = guesses + 1;
    txtInput.setText(Colors);
    } else if (guesses == 2) {
    Colors = Colors + "Yellow, ";
    inputThree = 3;
    guesses = guesses + 1;
    txtInput.setText(Colors);
    } else if (guesses == 3) {
    Colors = Colors + "Yellow, ";
    inputFour = 3;
    guesses = guesses + 1;
    txtInput.setText(Colors);
    } else if (mode == 4) {
        if (guesses == 4) {
          Colors = Colors + "Yellow, ";
          inputFive = 3;
          guesses = guesses + 1;
          txtInput.setText(Colors);  
        } else if (guesses == 5) {
          Colors = Colors + "Yellow, ";
          inputSix = 3;
          guesses = guesses + 1;
          txtInput.setText(Colors);  
        }
    }
    }
    }//GEN-LAST:event_btnYellowActionPerformed

    private void btnGreenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGreenActionPerformed
    if (mode != 0){
    Colors = Colors + "Green, ";
    if (guesses == 0) {
    inputOne = 4;
    guesses = guesses + 1;
    txtInput.setText(Colors);
    } else if (guesses == 1) {
    inputTwo = 4;
    guesses = guesses + 1;
    txtInput.setText(Colors);
    } else if (guesses == 2) {
    inputThree = 4;
    guesses = guesses + 1;
    txtInput.setText(Colors);
    } else if (guesses == 3) {
    inputFour = 4;
    guesses = guesses + 1;
    txtInput.setText(Colors);
    } else if (mode == 4) {
        if (guesses == 4) {
          inputFive = 4;
          guesses = guesses + 1;
          txtInput.setText(Colors);  
        } else if (guesses == 5) {
          inputSix = 4;
          guesses = guesses + 1;
          txtInput.setText(Colors);  
        }
    }
    }
    }//GEN-LAST:event_btnGreenActionPerformed

    private void btnGreyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGreyActionPerformed
    if (mode == 3 || mode == 4){
    if (guesses == 0) {
    Colors = Colors + "Gray, ";
    inputOne = 9;
    guesses = guesses + 1;
    txtInput.setText(Colors);
    } else if (guesses == 1) {
    Colors = Colors + "Gray, ";
    inputTwo = 9;
    guesses = guesses + 1;
    txtInput.setText(Colors);
    } else if (guesses == 2) {
    Colors = Colors + "Gray, ";
    inputThree = 9;
    guesses = guesses + 1;
    txtInput.setText(Colors);
    } else if (guesses == 3) {
    Colors = Colors + "Gray, ";
    inputFour = 9;
    guesses = guesses + 1;
    txtInput.setText(Colors);
    } else if (mode == 4) {
        if (guesses == 4) {
          Colors = Colors + "Gray, ";
          inputFive = 9;
          guesses = guesses + 1;
          txtInput.setText(Colors);  
        } else if (guesses == 5) {
          Colors = Colors + "Gray, ";
          inputSix = 9;
          guesses = guesses + 1;
          txtInput.setText(Colors);  
        }
    }
    }
    }//GEN-LAST:event_btnGreyActionPerformed

    private void btnPinkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPinkActionPerformed
    if (mode != 0){
    if (guesses == 0) {
    Colors = Colors + "Pink, ";
    inputOne = 5;
    guesses = guesses + 1;
    txtInput.setText(Colors);
    } else if (guesses == 1) {
    Colors = Colors + "Pink, ";
    inputTwo = 5;
    guesses = guesses + 1;
    txtInput.setText(Colors);
    } else if (guesses == 2) {
    Colors = Colors + "Pink, ";
    inputThree = 5;
    guesses = guesses + 1;
    txtInput.setText(Colors);
    } else if (guesses == 3) {
    Colors = Colors + "Pink, ";
    inputFour = 5;
    guesses = guesses + 1;
    txtInput.setText(Colors);
    } else if (mode == 4) {
        if (guesses == 4) {
          Colors = Colors + "Pink, ";
          inputFive = 5;
          guesses = guesses + 1;
          txtInput.setText(Colors);  
        } else if (guesses == 5) {
          Colors = Colors + "Pink, ";
          inputSix = 5;
          guesses = guesses + 1;
          txtInput.setText(Colors);  
        }
    }
    }
    }//GEN-LAST:event_btnPinkActionPerformed

    private void btnOrangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrangeActionPerformed
    if (mode != 0){
    if (guesses == 0) {
    Colors = Colors + "Orange, ";
    inputOne = 6;
    guesses = guesses + 1;
    txtInput.setText(Colors);
    } else if (guesses == 1) {
    Colors = Colors + "Orange, ";
    inputTwo = 6;
    guesses = guesses + 1;
    txtInput.setText(Colors);
    } else if (guesses == 2) {
    Colors = Colors + "Orange, ";
    inputThree = 6;
    guesses = guesses + 1;
    txtInput.setText(Colors);
    } else if (guesses == 3) {
    Colors = Colors + "Orange, ";
    inputFour = 6;
    guesses = guesses + 1;
    txtInput.setText(Colors);
    } else if (mode == 4) {
        if (guesses == 4) {
          Colors = Colors + "Orange, ";
          inputFive = 6;
          guesses = guesses + 1;
          txtInput.setText(Colors);  
        } else if (guesses == 5) {
          Colors = Colors + "Orange, ";
          inputSix = 6;
          guesses = guesses + 1;
          txtInput.setText(Colors);  
        }
    }
    }
    }//GEN-LAST:event_btnOrangeActionPerformed

    private void btnMagentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMagentaActionPerformed
    if (mode == 2 || mode == 3 || mode == 4){
    if (guesses == 0) {
    Colors = Colors + "Magenta, ";
    inputOne = 7;
    guesses = guesses + 1;
    txtInput.setText(Colors);
    } else if (guesses == 1) {
    Colors = Colors + "Magenta, ";
    inputTwo = 7;
    guesses = guesses + 1;
    txtInput.setText(Colors);
    } else if (guesses == 2) {
    Colors = Colors + "Magenta, ";
    inputThree = 7;
    guesses = guesses + 1;
    txtInput.setText(Colors);
    } else if (guesses == 3) {
    Colors = Colors + "Magenta, ";
    inputFour = 7;
    guesses = guesses + 1;
    txtInput.setText(Colors);
    } else if (mode == 4) {
        if (guesses == 4) {
          Colors = Colors + "Magenta, ";
          inputFive = 7;
          guesses = guesses + 1;
          txtInput.setText(Colors);  
        } else if (guesses == 5) {
          Colors = Colors + "Magenta, ";
          inputSix = 7;
          guesses = guesses + 1;
          txtInput.setText(Colors);  
        }
    }
    }
    }//GEN-LAST:event_btnMagentaActionPerformed

    private void btnBrownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrownActionPerformed
    if (mode == 2 || mode == 3 || mode == 4){
    if (guesses == 0) {
    Colors = Colors + "Brown, ";
    inputOne = 8;
    guesses = guesses + 1;
    txtInput.setText(Colors);
    } else if (guesses == 1) {
    Colors = Colors + "Brown, ";
    inputTwo = 8;
    guesses = guesses + 1;
    txtInput.setText(Colors);
    } else if (guesses == 2) {
    Colors = Colors + "Brown, ";
    inputThree = 8;
    guesses = guesses + 1;
    txtInput.setText(Colors);
    } else if (guesses == 3) {
    Colors = Colors + "Brown, ";
    inputFour = 8;
    guesses = guesses + 1;
    txtInput.setText(Colors);
    } else if (mode == 4) {
        if (guesses == 4) {
          Colors = Colors + "Brown, ";
          inputFive = 8;
          guesses = guesses + 1;
          txtInput.setText(Colors);  
        } else if (guesses == 5) {
          Colors = Colors + "Brown, ";
          inputSix = 8;
          guesses = guesses + 1;
          txtInput.setText(Colors);  
        }
    }
    }
    }//GEN-LAST:event_btnBrownActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Mastermind.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Mastermind.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Mastermind.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Mastermind.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Mastermind().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBlue;
    private javax.swing.JButton btnBrown;
    private javax.swing.JButton btnEasy;
    private javax.swing.JButton btnEnter;
    private javax.swing.JButton btnExtreme;
    private javax.swing.JButton btnGreen;
    private javax.swing.JButton btnGrey;
    private javax.swing.JButton btnHard;
    private javax.swing.JButton btnLeave;
    private javax.swing.JButton btnMagenta;
    private javax.swing.JButton btnMedium;
    private javax.swing.JButton btnOrange;
    private javax.swing.JButton btnPink;
    private javax.swing.JButton btnRed;
    private javax.swing.JButton btnYellow;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblErrors;
    private javax.swing.JLabel lblInput;
    private javax.swing.JLabel lblOutput;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextArea txtAreaErrors;
    private javax.swing.JTextArea txtInput;
    private javax.swing.JTextArea txtOutput;
    // End of variables declaration//GEN-END:variables
}
